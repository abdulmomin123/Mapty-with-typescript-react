[{"/home/momin/Desktop/mapty/src/index.tsx":"1","/home/momin/Desktop/mapty/src/components/App.tsx":"2","/home/momin/Desktop/mapty/src/components/Map.tsx":"3","/home/momin/Desktop/mapty/src/components/Sidebar.tsx":"4","/home/momin/Desktop/mapty/src/hooks/useToggle.ts":"5","/home/momin/Desktop/mapty/src/components/WorkoutList.tsx":"6","/home/momin/Desktop/mapty/src/components/WorkoutForm.tsx":"7"},{"size":443,"mtime":1611094801555,"results":"8","hashOfConfig":"9"},{"size":1454,"mtime":1611237656273,"results":"10","hashOfConfig":"9"},{"size":1236,"mtime":1611238138530,"results":"11","hashOfConfig":"9"},{"size":743,"mtime":1611243467813,"results":"12","hashOfConfig":"9"},{"size":274,"mtime":1611136915436,"results":"13","hashOfConfig":"9"},{"size":64,"mtime":1611228911215,"results":"14","hashOfConfig":"9"},{"size":1858,"mtime":1611244072897,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1bux0vk",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/momin/Desktop/mapty/src/index.tsx",[],["32","33"],"/home/momin/Desktop/mapty/src/components/App.tsx",["34"],"import { useState, useEffect } from 'react';\nimport { LatLngLiteral } from 'leaflet';\nimport * as Types from '../Types';\nimport useToggle from '../hooks/useToggle';\nimport styles from '../styles/App.module.css';\nimport Map from './Map';\nimport Sidebar from './Sidebar';\n\nconst App = () => {\n  // Workouts\n  // @ts-ignore\n  const [workouts, setWorkouts] = useState<Types.Workouts>();\n\n  // Currently clicked position on the map\n  const [workoutCoords, setWorkoutCoords] = useState<LatLngLiteral>();\n\n  // Form toggler\n  const [isFormShowing, toggleForm] = useToggle(false);\n\n  // Users coords\n  const [userPosition, setCoords] = useState<LatLngLiteral>();\n\n  // Getting users coords\n  useEffect(() => {\n    const { geolocation } = navigator;\n\n    if (!geolocation) return;\n\n    geolocation.getCurrentPosition(\n      ({ coords: { latitude: lat, longitude: lng } }) =>\n        setCoords({ lat, lng }),\n      () => alert('Could not get your location :(')\n    );\n  }, []);\n\n  return (\n    <div className={styles.App}>\n      {/* The sidear section */}\n      <Sidebar\n        workoutCoords={workoutCoords!}\n        isFormShowing={isFormShowing}\n        workouts={workouts!}\n      />\n\n      {/* The map section */}\n      {userPosition && (\n        <Map\n          userPosition={userPosition}\n          workouts={workouts!}\n          toggleForm={toggleForm}\n          setWorkoutCoords={setWorkoutCoords}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","/home/momin/Desktop/mapty/src/components/Map.tsx",[],"/home/momin/Desktop/mapty/src/components/Sidebar.tsx",[],"/home/momin/Desktop/mapty/src/hooks/useToggle.ts",[],"/home/momin/Desktop/mapty/src/components/WorkoutList.tsx",[],"/home/momin/Desktop/mapty/src/components/WorkoutForm.tsx",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":12,"column":20,"nodeType":"41","messageId":"42","endLine":12,"endColumn":31},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"@typescript-eslint/no-unused-vars","'setWorkouts' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]